#!/usr/bin/env ruby

require 'optparse'
require 'open-uri'
require 'nokogiri'
require 'rdoc'

include Nokogiri

options = {}

parser = OptionParser.new

parser.version = RDoc::VERSION
parser.banner = <<-BANNER
Usage: #{parser.program_name} [options] name

  where name is the name of a page, a class, or a method.

BANNER

parser.on('-h', '--help', 'Print this help.') do
  puts parser
  exit
end
parser.on('-v', '--version', 'Print the version of webri.') do
  puts RDoc::VERSION
  exit
end
parser.on('-r', '--release=STR', 'Sets Ruby release to STR') do |release|
  options[:release] = release
end
parser.parse!

error_message = case ARGV.size
when 0
  'No name given.'
when 1
  nil
else
  'Multiple names given.'
end
raise ArgumentError.new(error_message) if error_message

name = ARGV.shift

ReleasesUrl = 'https://docs.ruby-lang.org/en/'
html = URI.open(ReleasesUrl)
doc = Nokogiri::HTML(html)
link_eles = doc.xpath("//a")
href_for_release = {}
link_eles.each do |link_ele|
  text = link_ele.text
  next if text.match('outdated')
  release = text.sub('Ruby ', '')
  href = link_ele[:href]
  href_for_release[release] = href
end
release = options[:release]
if release.nil?
  release = href_for_release.keys[1]
end
href = href_for_release[release]
if href.nil?
  message = <<-MESSAGE

Unrecognized release #{release}:
  Should be one of #{href_for_release.keys}.
  Your installed Ruby is release #{RUBY_VERSION}.
MESSAGE
  raise ArgumentError.new(message)
end
toc_url = URI.join(ReleasesUrl, href, 'table_of_contents.html')
html = URI.open(toc_url.to_s)
doc = Nokogiri::HTML(html)

# Select executable for launching web browser.
host_os = RbConfig::CONFIG['host_os']
executable_name = case host_os
                  when /linux|bsd/
                    'xdg-open'
                  when /darwin/
                    'open'
                  when /32$/
                    'start'
                  else
                    message = "Unrecognized host OS: '#{host_os}'."
                    raise RuntimeError.new(message)
                  end

p release
p executable_name
